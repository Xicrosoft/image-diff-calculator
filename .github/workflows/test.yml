# This workflow runs lint and test jobs separately on every push and pull request
name: Lint and Test on PR
permissions:
  contents: read

on:
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  setup:
    name: Setup Python & Install Dependencies
    runs-on: ubuntu-latest
    outputs:
      python-version: ${{ steps.set-python.outputs.python-version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        id: set-python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint pytest pytest-cov

  lint:
    name: Lint (pylint)
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint
      - name: Run pylint
        run: |
          pylint image_diff_calculator.py interactive.py tests/*.py --fail-under 5 --fail-on E

  test:
    name: Test (pytest & coverage)
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      - name: Run tests with coverage and generate report
        run: |
          pytest --cov=. --cov-report=xml --cov-report=term --junitxml=pytest-report.xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
      - name: Upload pytest report
        uses: actions/upload-artifact@v4
        with:
          name: pytest-report
          path: pytest-report.xml
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Pytest Results
          path: pytest-report.xml
          reporter: pytest
